#!/bin/bash

#Directory where supervisord looks for node.js config files
DIR="$( cd -P "$( dirname `readlink -f $0` )" && pwd )";
SUPERVISOR_D_CONF_DIR=/etc/beet/conf;
BEET_LOG_DIR=/var/log/beet;
TEMPLATE_PATH="$DIR/supervisord.conf"
    

#package managers for installing supervisord
PACKAGE_MANAGERS=( "port" "aptitude" );

#where could the config files be located?
SUPERVISOR_D_CONFS=( "/etc/supervisord.conf" "/usr/local/etc/supervisord.conf" );

INSTALL_OP=$1;     



set_package_manager () {
	
	for PACKAGE_MANAGER in ${PACKAGE_MANAGERS[*]};
	do
		if [ `which $PACKAGE_MANAGER` ]; then
			return 1;
		fi;
	done;
	
	echo "Cannot install beet. Tried using: ${PACKAGE_MANAGERS[*]}";
	exit 1;
}

set_supervisor_config_path () {
	for SUPERVISOR_CONF_PATH in ${SUPERVISOR_D_CONFS[*]};
	do
		if [ -e $SUPERVISOR_CONF_PATH ]; then
			return 1;
		fi;
	done;
	
	echo "could not located supervisord.conf";
	exit 1;
}


init () {
	
	#all the initialization stuff here
	mkdir -p $SUPERVISOR_D_CONF_DIR $BEET_LOG_DIR;
	
	
	#first need to check to see if a package manager exists, otherwise exit
	set_package_manager;    
	                        
	
	#next check supervisor
	check_supervisord;
	
	#ready up the supervisor config
	set_supervisor_config_path;
	                           
	
	#enter supervisord credentials
	confirm_credits;
	
	#option to add upstart script
	check_upstart;
	
	#startup supervisord
	finish;
}


confirm ()
{
	#confirmation message 
	MSG=$1;

	#callback function on YES
	CALLBACK=$2;
	
	
	if [ "$INSTALL_OP" == "-yes" ]; then
		if [ $CALLBACK ]; then $CALLBACK; fi;
		return 1;
	elif [ "$INSTALL_OP" == "-no" ]; then
		return 1;
	fi;
		
	
	#loop until we have the write answer
	while [ 1 ]
	do
		
		#prompt the user, expect an input
		echo -n "$MSG [y/n]: "; read yn;
		
		#do some checking to make sure it's a confirmation...
		if [ "$yn" == "y" ]; then
			
			#callback function on "yes"? call it.
			if [ $CALLBACK ]; then $CALLBACK; fi;
				
			return 1;
		elif [ "$yn" == "n" ]; then
			return 0;
		fi;
		
		
		#otherwise notify the user and try again
		echo "Please enter either \"y\" or \"n\"";
		
	done;
	
}

install_supervisord () {
	
	echo "Installing supervisor";  
	
	if [ ! `which easy_install `];
	then
		sudo apt-get install python-setuptools -y;          
		
		#fix issue with ubuntu
		sudo easy_install elementtree;    
	fi;
	
	#installing...
	$PACKAGE_MANAGER install "supervisor";
	
	``
	#echo the config file
	cat $TEMPLATE_PATH > /etc/supervisord.conf;
}     



check_supervisord () {
	if [ ! `which supervisord` ];
	then
		confirm "Would you like to install supervisord?" "install_supervisord"
	fi;
}

add_upstart () {
	sudo mv supervisord /etc/init.d/supervisord 
}


check_upstart () {
	confirm "Would you like to add the supervisord upstart script to /etc/init.d?" "add_upstart"
}

read_password () {
	stty -echo; read $1; stty echo; echo "";#line break
}

replace () {
	TMP_NAM=/tmp/$RANDOM
	cp $2 $TMP_NAM
	sed $1 $2 > $TMP_NAM
	cat $TMP_NAM > $2; 
}

enter_credits () {
	echo -n "username: "; read username;
	echo -n "password: "; read_password password;
	 
	sudo cp $SUPERVISOR_CONF_PATH /tmp/supervisord.conf
	
	replace "s/username=[a-z0-9]*/username=$username/g" $SUPERVISOR_CONF_PATH
	replace "s/password=[a-z0-9]*/password=$password/g" $SUPERVISOR_CONF_PATH
}


confirm_credits () {
	confirm "Would you like to set *new* credentials for supervisord?" "add_upstart";
}


finish () {

	if [ "$INSTALL_OP" == "-no" ]; then return 0; fi;

	cd /etc/;

	echo "Restarting supervisord";
	
	#shutdown - dunno if it's running or not
	sudo supervisorctl shutdown;

	#start the daemon
	sudo supervisord;
}

#INITALIZLE
init;





 

